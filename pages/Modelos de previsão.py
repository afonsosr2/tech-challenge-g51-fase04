import streamlit as st
import pandas as pd
import datetime
import joblib
from prophet.plot import plot_plotly
from plotly import graph_objs as go
from utils import atualizando_dados_ipea

###### Configura칞칚o Inicial ######
dados = pd.read_csv(atualizando_dados_ipea())

def formata_numero(valor, prefixo = ''):
    if(isinstance(valor, str)):
        return datetime.datetime.strptime(valor, '%Y-%m-%d').strftime('%d/%m/%Y')
    return f'{prefixo} {valor:.2f}'

###### Modelos ######

# Previs칚o com Prophet
def prophet_prediction(periodo_previsao):
    # Carregando o modelo
    m = joblib.load('modelo/prophet.joblib')

    # Prevendo de acordo com o filtro
    future = m.make_future_dataframe(periods=periodo_previsao, freq="B")
    forecast = m.predict(future)
    forecast_resumo = forecast[["ds", "yhat"]].rename(columns=
                                                      {"ds": "Data", 
                                                       "yhat": "Pre칞o - petr칩leo bruto - Brent (FOB)"})
    return m, forecast, forecast_resumo

# Previs칚o com Modelo 1
def modelo_1_prediction(periodo_previsao):
    st.text('Em constru칞칚o...')


###### Gr치ficos e M칠tricas ######
def plot_raw_data():
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=dados['Data'], y=dados['Pre칞o - petr칩leo bruto - Brent (FOB)'], name="Pre칞o do Petr칩leo Brent"))
    fig.layout.update(title_text='Pre칞o do Petr칩leo Brent (FOB)', xaxis_rangeslider_visible=True)
    st.plotly_chart(fig)
    
def prophet_plot_table(m, forecast, forecast_resumo, periodo_previsao):
    # Mostrando os 칰ltimos 5 dias de previs칚o e plotando o gr치fico com a previs칚o e dados do IPEA
    st.subheader('Previs칚o')
    st.dataframe(forecast_resumo.tail())
        
    st.subheader(f'Gr치fico de previs칚o em {periodo_previsao} dias')
    plot_prev_prophet = plot_plotly(m, forecast)
    st.plotly_chart(plot_prev_prophet)

###### P치gina dos Modelos de Previs칚o ######
    
#### Sidebar ####
    
st.sidebar.title('Par칙metros do Modelo')
with st.sidebar.expander('Per칤odo de Previs칚o', True):
    periodo = st.slider('Selecione o per칤odo de previs칚o:', 1, 365, 7)

with st.sidebar.expander('Modelo de Machine Learning', True):
    input_modelo = st.selectbox('Selecione o modelo que deseja utilizar:', ['Escolha um modelo','Modelo_1', 'Prophet'], 0)

rodar_modelo = st.sidebar.button(label="Rodar Modelo")

#### P치gina dos modelos de previs칚o do petr칩leo Brent ####
st.write('# :oil_drum: An치lise de pre칞os do Petr칩leo Brent')
st.header("Dados do Petr칩leo Brent", divider="gray")

coluna1, coluna2 = st.columns(2)
with coluna1:
    st.metric('Data da 칰ltima atualiza칞칚o dos dados:', formata_numero(dados["Data"].max()))
with coluna2:
    st.metric('Pre칞o da 칰ltima atualiza칞칚o dos dados:', formata_numero(dados['Pre칞o - petr칩leo bruto - Brent (FOB)'].iloc[-1], "U$"))

# Gr치fico dos dados atuais  
plot_raw_data()

if(input_modelo == "Escolha um modelo"):
    st.info("Defina o modelo, os par칙metros e rode o modelo para exibi칞칚o dos dados\n", icon="游뚿")
if(input_modelo == "Prophet" and rodar_modelo):
    st.header("Prophet", divider="gray")
    m, forecast, forecast_resumo = prophet_prediction(periodo)

    aba1, aba2 = st.tabs(['Resultado', 'M칠tricas do modelo'])
    with aba1:
        prophet_plot_table(m, forecast, forecast_resumo, periodo)
    with aba2:
        st.write("Em constru칞칚o")
if(input_modelo == "Modelo_1" and rodar_modelo):
    st.header("Modelo 1", divider="gray")
    modelo_1_prediction(periodo)
    
